// <auto-generated />
using Churrascaria.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Churrascaria.Data.Migrations
{
    [DbContext(typeof(ChurrascariaContext))]
    [Migration("20210317204410_incial")]
    partial class incial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Churrascaria.Domain.Convidado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CascadeMode")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Telefone")
                        .HasColumnType("CHAR(11)");

                    b.Property<bool>("VaiBeber")
                        .HasColumnType("bit");

                    b.Property<decimal>("ValorConvidado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Convidados");
                });

            modelBuilder.Entity("Churrascaria.Domain.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CascadeMode")
                        .HasColumnType("int");

                    b.Property<int?>("ConvidadoId")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("CHAR(11)");

                    b.Property<bool>("VaiBeber")
                        .HasColumnType("bit");

                    b.Property<decimal>("ValorFuncionario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ConvidadoId")
                        .IsUnique()
                        .HasFilter("[ConvidadoId] IS NOT NULL");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("Churrascaria.Domain.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CascadeMode")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VARCHAR(80)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("Churrascaria.Domain.Funcionario", b =>
                {
                    b.HasOne("Churrascaria.Domain.Convidado", "Convidado")
                        .WithOne("Funcionario")
                        .HasForeignKey("Churrascaria.Domain.Funcionario", "ConvidadoId");

                    b.Navigation("Convidado");
                });

            modelBuilder.Entity("Churrascaria.Domain.Participante", b =>
                {
                    b.HasOne("Churrascaria.Domain.Funcionario", null)
                        .WithMany("Participante")
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("Churrascaria.Domain.Convidado", b =>
                {
                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Churrascaria.Domain.Funcionario", b =>
                {
                    b.Navigation("Participante");
                });
#pragma warning restore 612, 618
        }
    }
}
